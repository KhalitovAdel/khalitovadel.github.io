{"version":3,"sources":["bio/constants/Bio.constants.ts","utils/string/string.utils.ts","bio/Bio.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["data","profile","descriptions","history","entity","link","state","period_start","period_end","region","todo","skills","languages","Databases","Frameworks","Other","education","StringUtils","value","first","substr","toUpperCase","concat","toLowerCase","Bio","className","src","process","alt","href","map","el","index","formatEl","links","includes","replaceAll","dangerouslySetInnerHTML","__html","printHistoryTemplate","Object","keys","key","globalIndex","firstUpper","params","id","td","React","Component","App","document","getElementsByTagName","innerHTML","exact","path","render","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b472240f.chunk.js","sourcesContent":["export const data = {\n    profile: {\n        descriptions: [\n            'Hello. For three years in my free time, I worked on my project - a CRM system (typescript).',\n            'Since 2019 I have been working on @mobishop - JS back-end developer (stack: mongodb, express, nodejs). I wrote API, worked with big data and complex integration (online store for large distributors).',\n            'Since 2020 I have been working on @redtaxi: 4 mobile apps, 6 servers.',\n            'Since march 2020 I have been working on @alternativa: microservices, nestjs, vue. (insurance broker)',\n            'Since february 2021 I have been working on @pinpointer: react, flow, graphql, express',\n        ],\n    },\n    history: [\n        {\n            entity: '@pinpointer',\n            link: 'https://www.pinpointer.se',\n            state: 'full stack engineer',\n            period_start: '2021/2',\n            period_end: '',\n            region: 'Sweden (remotely)',\n            todo: [\n                'Integrations with scrive system.',\n                'Implementation first microservice and connecting them with monolit.'\n            ],\n        },\n        {\n            entity: '@alternativa',\n            link: 'https://agenta.online/',\n            state: 'back-end engineer',\n            period_start: '2020',\n            period_end: '2021/2',\n            region: 'RF, Kazan',\n            todo: [\n                'Integrations with insurance companies.',\n                'Practice nestjs, rmq, kubernetes, elasticsearch.',\n                'Integrations with accounting system.',\n                'Containerization (bitbucket).',\n            ],\n        },\n        {\n            entity: '@redtaxi',\n            link: 'https://www.linkedin.com/company/redtaxilb/about/',\n            state: 'back-end engineer',\n            period_start: '2020',\n            period_end: '2020/3',\n            region: 'Lebanon (remotely)',\n            todo: ['Connection of a payment gateway.', 'Project deployment in development environments.', 'Containerization (gitlab-ci).'],\n        },\n        {\n            entity: '@mobishop',\n            link: 'https://www.linkedin.com/company/mobishop/about/',\n            state: 'back-end engineer',\n            period_start: '2019',\n            period_end: '2020',\n            region: 'RF, Moscow',\n            todo: [\n                'Writing a client-friendly API.',\n                'Worked in collaboration with other team members to achieve success.',\n                'Always good faith and positive attitude.',\n                'Consulting a client by API.',\n                'Integration of distributor data in the online store.',\n            ],\n        },\n        {\n            entity: '@own_projects',\n            link: '',\n            state: 'back-end engineer',\n            period_start: '2017',\n            period_end: '2019',\n            region: 'RF, Kazan',\n            todo: [\n                'Creation of a CRM system. Learning node js, typescript. Practice (GIT).',\n                'The project is a cleaning company, created on the example of qlean.ru.',\n                'Angular | React | Node js',\n            ],\n        },\n    ],\n    skills: {\n        languages: ['TypeScript', 'Node js', 'Python'],\n        Databases: ['Mongodb', 'MySQL', 'Postgres'],\n        Frameworks: ['Angular', 'Vue', 'Express', 'Nestjs', 'React'],\n        Other: ['Linux', 'Docker', 'Gitlab CI', 'Bitbucket CI', 'Elasticsearch (ELK)', 'RabbitMQ', 'Web scraping', 'Socket', 'GraphQL', 'Flow'],\n    },\n    education: [\n        {\n            entity: 'Kazan (Volga) Federal University, Hight school',\n            period_start: '2012',\n            period_end: '2018',\n            region: 'RF, Kazan',\n            todo: ['2 years of study. Applied Informatics. Studied JAVA.', 'After 2 years of study, I transferred to the law faculty.'],\n        },\n    ],\n};\n","export class StringUtils {\n    public static firstUpper(value = '') {\n        const first = value.substr(0, 1).toUpperCase();\n        return first.concat(value.substr(1).toLowerCase());\n    }\n}\n","import React from 'react';\nimport { data } from './constants/Bio.constants';\nimport { StringUtils } from '../utils/string/string.utils';\nimport { HistoryTemplate } from './interfaces/Bio.interfaces';\n\nexport class Bio extends React.Component<any, any> {\n    protected static get profile() {\n        return data?.profile?.descriptions?.map((el, index) => {\n            let formatEl = el;\n            Bio.links.map((entity) => {\n                if (formatEl.includes(entity)) {\n                    formatEl = formatEl.replaceAll(entity, `<a class=\"text-firm\" href=\"#${entity}\">${entity}</a>`);\n                }\n                return null;\n            });\n            return <p key={index} dangerouslySetInnerHTML={{ __html: formatEl }}></p>;\n        });\n    }\n\n    protected static get history() {\n        return Bio.printHistoryTemplate(data?.history);\n    }\n\n    protected static get links() {\n        return data?.history?.map(({ entity }) => entity) || [];\n    }\n\n    protected static get skills() {\n        const skills = (data?.skills as { [key: string]: string[] }) || {};\n        return (Object.keys(skills) || []).map((key, globalIndex) => {\n            return (\n                <div className=\"lg:py-2 lg:ml-2\" key={globalIndex}>\n                    <p className=\"mb-1\">{StringUtils.firstUpper(key)}</p>\n                    <ul>\n                        {(skills[key] || []).map((value, index) => {\n                            return (\n                                <li className=\"list-disc ml-3\" key={index}>\n                                    {value}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            );\n        });\n    }\n\n    protected static get education() {\n        return Bio.printHistoryTemplate(data?.education);\n    }\n\n    protected static printHistoryTemplate(params?: HistoryTemplate[]) {\n        return (params || []).map((el) => {\n            return (\n                <div className=\"py-2 pl-5\" key={el.entity} id={el.entity}>\n                    <p className=\"font-medium\">\n                        {StringUtils.firstUpper(el.state ? el.state.concat(', ') : '')}{' '}\n                        {el.link ? (\n                            <a className=\"text-firm\" href={el.link || '#'}>\n                                {el.entity}\n                            </a>\n                        ) : (\n                            <span>{el.entity}</span>\n                        )}\n                    </p>\n                    <p className=\"text-gray-600 my-1\">\n                        {el.period_start} — {el.period_end || 'Present'} | {el.region}\n                    </p>\n                    <ul className=\"ml-5\">\n                        {el.todo?.map((td, index) => {\n                            return (\n                                <li className=\"list-disc\" key={index}>\n                                    {td}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container my-4 grid grid-cols-1 lg:grid-cols-5\">\n                    <div className=\"body col-span-1 lg:col-span-4\">\n                        <div className=\"who_am_i grid sm:grid-cols-3 md:grid-cols-5 justify-items-center sm:justify-items-start\">\n                            <img\n                                className=\"mb-2 w-8/12 sm:w-2/3 rounded\"\n                                src={process.env.REACT_APP_SELF_PHOTO}\n                                alt={(process.env.REACT_APP_SELF_FULLNAME || '').concat(' ', 'portfolio.')}\n                            />\n                            <div className=\"sm:col-span-2 md:col-span-4 flex flex-col justify-center\">\n                                <h1 className=\"text-firm text-2xl font-bold\">{process.env.REACT_APP_SELF_FULLNAME}</h1>\n                                <p className=\"text-xl font-medium\">Back-end engineer</p>\n                                <p className=\"font-medium text-sm\">\n                                    contact me:{' '}\n                                    <a className=\"text-firm font-bold\" href={'mailto:'.concat(process.env.REACT_APP_SELF_MAIL || '')}>\n                                        {process.env.REACT_APP_SELF_MAIL || ''}\n                                    </a>\n                                </p>\n                            </div>\n                        </div>\n\n                        <div className=\"profile py-5\">\n                            <p className=\"uppercase mb-2\">profile</p>\n                            <div className=\"text-sm\">{Bio.profile}</div>\n                        </div>\n\n                        <div className=\"history py-5\">\n                            <p className=\"uppercase mb-2\">EMPLOYMENT HISTORY</p>\n                            <div className=\"text-sm\">{Bio.history}</div>\n                        </div>\n\n                        <div className=\"education py-5\">\n                            <p className=\"uppercase mb-2\">education</p>\n                            <div className=\"text-sm\">{Bio.education}</div>\n                        </div>\n                    </div>\n\n                    <div className=\"info-bar grid grid-cols-2 lg:grid-cols-1 auto-rows-max\">\n                        <div className=\"group\">\n                            <p className=\"uppercase mb-1\">DETAILS</p>\n                            <a className=\"text-firm\" href={'callto:'.concat(process.env.REACT_APP_SELF_PHONE || '')}>\n                                {process.env.REACT_APP_SELF_PHONE || ''}\n                            </a>\n                        </div>\n                        <div className=\"group lg:py-2\">\n                            <p className=\"uppercase mb-1\">LINKS</p>\n                            <a className=\"text-firm\" href=\"https://www.linkedin.com/in/adel-khalitov/\">\n                                Linkedin\n                            </a>\n                        </div>\n                        <div className=\"group py-2 col-span-2 lg:col-span-1\">\n                            <p className=\"uppercase mb-1\">SKILLS</p>\n                            <div className=\"grid grid-cols-3 sm:grid-cols-4 lg:grid-cols-1\">{Bio.skills}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Bio } from './bio/Bio';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nexport class App extends React.Component<any, any> {\n    render() {\n        const title = document.getElementsByTagName('title')[0] || ({} as any);\n        title.innerHTML = process.env.REACT_APP_SELF_FULLNAME || '';\n        return (\n            <Switch>\n                <Route exact path=\"/\">\n                    <Bio />\n                </Route>\n                <Route render={() => <Redirect to=\"/\" />} />\n            </Switch>\n        );\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}